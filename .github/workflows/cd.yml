# This workflow will:
# - bump the release version in package.json, package-lock.json
#
# For more information, see:
# https://github.com/superfaceai/release-changelog-action
name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      release-level:
        description: "Release level (one of): pre, patch, minor, major"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      RELEASE_LEVEL: ${{ github.event.inputs.release-level }}
    steps:
      - id: checkout
        name: Checkout code
        uses: actions/checkout@v3

      - id: nvmrc
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"

      - id: node
        name: Setup Node.js (using .nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: "npm"

      - id: dependencies
        name: Install dependencies
        run: npm ci

      #- id: git
      #  name: Configure git
      #  run: |
      #    git config --global user.email 'cnsi.github-actions@valtech.com'
      #    git config --global user.name 'CNSI GitHub Actions'

      - id: bump
        if: startsWith(github.event.inputs.release-level, 'pre') != true
        name: Bump package version, create tag, and publish release
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_LEVEL)" >> $GITHUB_ENV
          npm run version:$RELEASE_LEVEL

      - id: get-changelog
        name: Get changelog details for new version
        uses: superfaceai/release-changelog-action@v2
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: read

      - id: release
        name: Update GitHub release documentation with changelog details
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          body: ${{ steps.get-changelog.outputs.changelog }}
          prerelease: ${{ startsWith(github.event.inputs.release-level, 'pre') }}

      #- id: upload
      #  name: Upload to Chrome Web Store
      #  run: npm run upload --if-present
